import telebot
from media import Image, Audio
import json
from Buttons import (markup_quest, markup_quest1, markup_quest0, markup_quest5,
                     markup_menu1, markup_menu2, markup_quest7)

bot = telebot.TeleBot("6524252328:AAEnG0LVC_WLRUCvnBuVELU06Eu82fMN8UA")


@bot.message_handler(commands=['start'])
def start_message(message):
    try:
        name = message.chat.first_name
        bot.send_message(message.chat.id, f'<b>–ü—Ä–∏–≤–µ—Ç, {name}üëã\n\n</b>'
                                              f'<i>–ü—Ä–æ–π–¥–∏ –∫–≤–µ—Å—Ç –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º\n'
                                              f'"–ù–µ–æ–±–∏—Ç–∞–µ–º—ã–π –æ—Å—Ç—Ä–æ–≤üèù".\n'
                                              f'–ù–∞–∂–∏–º–∞–π –Ω–∞ "–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç"\n\n</i>'
                                              f'<b>–£–¥–∞—á–∏ –¥—Ä—É–≥!\n</b>', parse_mode='html', reply_markup=markup_menu1)
    except:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n'
                                          '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')


@bot.message_handler(func=lambda message: message.text == "–ü–æ–º–æ—â—åü§ù")
def help_message(message):
    bot.send_message(message.chat.id, '–°–≤—è–∂–∏—Å—å —Å [—Å–æ–∑–¥–∞—Ç–µ–ª–µ–º](https://t.me/SergeiDobrynkin07)',
                     parse_mode='Markdown',)


@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç‚öîÔ∏è")
def start_quest(message):
    try:
        img = Image()
        audio = Audio()
        img1 = img.the_opening_scene()
        audio1 = audio.the_opening_scene_audio()
        with open('location.json', encoding='utf-8') as json_file:
            data = json.load(json_file)
        start = data['locations']['start']['description']
        bot.send_photo(message.chat.id, img1, start, parse_mode='html')
        bot.send_audio(message.chat.id, audio1, reply_markup=markup_menu2)
    except:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n'
                                          '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')


@bot.message_handler(func=lambda message: True)
def quest_forest(message):
    try:
        if message.text == "–î–∞–ª–µ–µ‚û°Ô∏è":
            img = Image()
            audio = Audio()
            img1 = img.scene()
            audio1 = audio.scene_audio1()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc1 = data['locations']['scene1']['description']
            bot.send_photo(message.chat.id, img1, loc1, parse_mode='html')
            bot.send_audio(message.chat.id, audio1, reply_markup=markup_quest)
        elif message.text == "–ü–æ–π—Ç–∏ –≤ –ª–µ—Åüèû":
            img = Image()
            audio = Audio()
            img1 = img.scene1()
            audio1 = audio.scene_audio2()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc2 = data['locations']['scene2']['description']
            bot.send_photo(message.chat.id, img1, loc2, parse_mode='html')
            bot.send_audio(message.chat.id, audio1, reply_markup=markup_quest0)
        elif message.text == "–î–æ—Å—Ç–∞—Ç—å –∫–æ–∫–æ—Åü••":
            img = Image()
            audio = Audio()
            img2 = img.scene3()
            audio2 = audio.scene_audio3()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc3 = data['locations']['scene3']['description']
            bot.send_photo(message.chat.id, img2, loc3, parse_mode='html')
            bot.send_audio(message.chat.id, audio2, reply_markup=markup_quest1)
        elif message.text == "–°–¥–µ–ª–∞—Ç—å –Ω–æ—á–ª–µ–≥üèï":
            img = Image()
            audio = Audio()
            img5 = img.scene4()
            audio5 = audio.scene_audio5()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc4 = data['locations']['scene4']['description']
            bot.send_photo(message.chat.id, img5, loc4, parse_mode='html')
            bot.send_audio(message.chat.id, audio5, reply_markup=markup_quest5)
        elif message.text == "–ò–¥—Ç–∏ –Ω–∞ –∑–≤—É–∫":
            img = Image()
            audio = Audio()
            img6 = img.scene5()
            audio6 = audio.scene_audio6()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc5 = data['locations']['scene5']['description']
            bot.send_photo(message.chat.id, img6, loc5, parse_mode='html')
            bot.send_audio(message.chat.id, audio6, reply_markup=markup_menu1)
        elif message.text == "–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ –ø–æ –ª–µ—Å—Éüèû":
            img = Image()
            audio = Audio()
            img9 = img.scene6()
            audio9 = audio.scene_audio7()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc6 = data['locations']['scene6']['description']
            bot.send_photo(message.chat.id, img9, loc6, parse_mode='html')
            bot.send_audio(message.chat.id, audio9, reply_markup=markup_menu1)
        elif message.text == "–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ":
            img = Image()
            audio = Audio()
            img3 = img.scene2()
            audio4 = audio.scene_audio4()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc7 = data['locations']['scene7']['description']
            bot.send_photo(message.chat.id, img3, loc7, parse_mode='html')
            bot.send_audio(message.chat.id, audio4, reply_markup=markup_menu1)
        elif message.text == "–û—Å—Ç–∞—Ç—å—Å—è –≤ —à–∞–ª–∞—à–µüèï":
            img = Image()
            audio = Audio()
            img17 = img.scene7()
            audio18 = audio.scene_audio8()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc8 = data['locations']['scene6']['description']
            bot.send_photo(message.chat.id, img17, loc8, parse_mode='html')
            bot.send_audio(message.chat.id, audio18, reply_markup=markup_menu1)
        elif message.text == "–ó–≤–∞—Ç—å –ø–æ–º–æ—â—åüÜò":
            img = Image()
            audio = Audio()
            img20 = img.scene8()
            audio20 = audio.scene_audio9()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc9 = data['locations']['scene8']['description']
            bot.send_photo(message.chat.id, img20, loc9, parse_mode='html')
            bot.send_audio(message.chat.id, audio20, reply_markup=markup_quest7)
        elif message.text == "–ó–∞–∂–µ—á—å —Å–∏–≥–Ω–∞–ª—å–Ω—ã–π –æ–≥–æ–Ω—åüî•":
            img = Image()
            audio = Audio()
            img21 = img.scene9()
            audio21 = audio.scene_audio10()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc10 = data['locations']['scene5']['description']
            bot.send_photo(message.chat.id, img21, loc10, parse_mode='html')
            bot.send_audio(message.chat.id, audio21, reply_markup=markup_menu1)
        elif message.text == "–ù–µ –¥–µ–ª–∞—Ç—å –æ–≥–æ–Ω—å":
            img = Image()
            audio = Audio()
            img22 = img.scene10()
            audio22 = audio.scene_audio11()
            with open('location.json', encoding='utf-8') as json_file:
                data = json.load(json_file)
            loc11 = data['locations']['scene6']['description']
            bot.send_photo(message.chat.id, img22, loc11, parse_mode='html')
            bot.send_audio(message.chat.id, audio22, reply_markup=markup_menu1)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ–∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup_menu1)
    except:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n'
                                          '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')


bot.polling()